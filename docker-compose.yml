version: "3.9"
services:
  app:
    build:
      context: .
      target: debian
    environment:
      DD_AGENT_HOST: agent
      DD_SERVICE: ${DD_SERVICE:-go-dvwa}
      DD_TAGS: ${DD_TAGS}
      DD_ENV: ${DD_ENV:-testing}
    ports:
      - 7777:7777
      - 7778:7778

  agent:
    image: datadog/agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
    environment:
      # note: sometimes this does not work and you have to put your key manually
      DD_API_KEY: ${DD_API_KEY}
      DD_SITE: ${DD_SITE}
      DD_REMOTE_CONFIGURATION_ENABLED: ${DD_REMOTE_CONFIGURATION_ENABLED}
      DD_HOSTNAME: ${DD_HOSTNAME}
      DD_ENV: ${DD_ENV}
      DD_DOGSTATSD_NON_LOCAL_TRAFFIC: ${DD_DOGSTATSD_NON_LOCAL_TRAFFIC}
      DD_REMOTE_CONFIGURATION_KEY: ${DD_REMOTE_CONFIGURATION_KEY}
      DD_REMOTE_CONFIGURATION_CONFIG_ROOT: ${DD_REMOTE_CONFIGURATION_CONFIG_ROOT}
      DD_REMOTE_CONFIGURATION_DIRECTOR_ROOT: ${DD_REMOTE_CONFIGURATION_DIRECTOR_ROOT}
      DD_REMOTE_CONFIGURATION_REFRESH_INTERVAL: 5s
    ports:
      - 8125:8125/udp
      - 8126:8126
